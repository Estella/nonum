sprunge () {
	curl -F 'sprunge=<-' http://sprunge.us < ${1:-/dev/stdin}
}
echo sprunge loaded

gistify () {
	cat << EOF | curl https://api.github.com/gists -s -X POST -d @-
{
	"description":"Gistified command line output",
	"public":"true",
	"files": {
		"gistify.txt": {
			"content":"$(cat < ${1:-/dev/stdin})"
		}
	}
}
EOF
}
echo gistify loaded

nonumread () {
	#This one is obvious.
	clear #the screen
	echo # a new line
	cat "$1" # the first  argument catenates to the terminal
	echo # a new line
	[[ "$2" = "print" ]] && lp -- "$1" #print if option 2 is 'print'
}
echo nonumread loaded

xres-set () {
	xrandr --output $1 --mode $2
}

xres-off () {
	xrandr --output $1 --off
}

xc-ml () {
	xrandr --newmode $(gtf $2 $3 $4 -x | head -n 3 | tail -n 1 | sed -e "s/Modeline//" -e "s/^ *//")
	xrandr --addmode $1 $(gtf $2 $3 $4 -x | head -n 3 | tail -n 1 | sed -e "s/Modeline//" -e "s/^ *//"  -e 's/^"//g' -e 's/".*$//g')
}
echo xres-set, xres-off and xc-ml loaded

getip-ext () {
	wget -q -O - checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
}

getip () {
	/sbin/ifconfig | grep -A 1 $1 | tail -n 1 | sed -e 's/ *inet addr://' -e 's/  .*//'
}

get-ip () {
	echo Your IP address is: $(getip $1)
	echo To the outside world it is: $(getip-ext)
}
echo getip, getip-ext and get-ip loaded

n-make () {
	./configure || exit
	. ./nmakefile
	for file in $CODEFILE ; do
		$COMP $CODEFILE
	done
}

nonumhelp () {
	cat << EOF
Usage:
sprunge.us pastebin service:	<command to sprunge> | sprunge
gist by github, paste service:	<command to paste> | gistify
nonum's typex:			n-typex #accepts no arguments
nonum's nonumread:		nonumread <filename> #append ' print' to print the
				file
Set existing X mode to output:	xres-set <output in use> <mode you would like>
Turn off X output:		xres-off <output to turn off>
Automated mode generator: 	xc-ml <output> <width> <height> <refresh rate>
Automated external IP getter:	getip-ext
Get your insternal IP:		getip <interface name>
Get both IPs at once:		get-ip <internal interface name>
Remark when using this lib:	rem(ark) << eoceoc
				... comment here ... 
				eoceoc
EOF
}
echo nonumhelp loaded

remark () { :; }
rem () { :; }
